----- package.json -----
{
  "name": "stivans",
  "private": true,
  "version": "0.0.0",
  "type": "module",

  "engines": {
    "node": ">=20.19"
  },

  "packageManager": "npm@10.9.0",

  "scripts": {
    "dev": "vite",
    "build": "vite build",
    "lint": "eslint .",
    "preview": "vite preview",
    "preinstall": "node -e \"const v=process.versions.node.split('.').map(Number); if(v[0]<20||(v[0]===20&&v[1]<19)){ console.error('Node >=20.19 required'); process.exit(1) }\""
  },

  "dependencies": {
    "@supabase/supabase-js": "^2.57.4",
    "icons": "^1.0.0",
    "react": "^19.1.1",
    "react-dom": "^19.1.1",
    "react-icons": "^5.5.0",
    "react-router-dom": "^7.9.1"
  },

  "devDependencies": {
    "@eslint/js": "^9.33.0",
    "@types/react": "^19.1.10",
    "@types/react-dom": "^19.1.7",
    "@vitejs/plugin-react": "^5.0.0",
    "eslint": "^9.33.0",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-react-refresh": "^0.4.20",
    "globals": "^16.3.0",
    "vite": "^7.1.2"
  }
}

----- vercel.json (if present) -----
(no vercel.json)

----- functions / api directory (top 3 levels) -----
api\xendit\create-invoice.js
api\xendit\webhook.js

----- vite / build config (if present) -----
import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vite.dev/config/
export default defineConfig({
  plugins: [react()],
})

----- routes / main router file (first 300 lines) -----
// src/main.jsx
import React from "react";
import ReactDOM from "react-dom/client";
import { createBrowserRouter, RouterProvider } from "react-router-dom";
import App from "./App.jsx";
import "./index.css";

// Pages
import Home from "./pages/home/home.jsx";
import About from "./pages/about/about.jsx";
import Login from "./pages/login/login.jsx";
import Profile from "./pages/profile/profile.jsx";
import Signup from "./pages/signup/signup.jsx";
import Chapel from "./pages/chapel/chapel.jsx";
import Insurance from "./pages/insurance/insurance.jsx";
import Admin from "./pages/admin/admin.jsx";
import AdminLogin from "./pages/admin/adminlogin.jsx";
import Cart from "./pages/cart/cart.jsx";
import Checkout from "./pages/checkout/checkout.jsx";
import Catalog from "./pages/catalog/catalog.jsx";
import ProductDetail from "./pages/product/productdetail.jsx";

// Auth / Context
import { AuthProvider } from "./AuthContext.jsx";
import ProtectedRoute from "./routes/ProtectedRoute.jsx";
import { UserProvider } from "./contexts/UserContext.jsx";
import { CartProvider } from "./contexts/cartContext.jsx";

const router = createBrowserRouter([
  {
    path: "/",
    element: <App />,
    children: [
      { index: true, element: <Home /> },

      // Public routes
      { path: "catalog", element: <Catalog /> },
      { path: "catalog/:id", element: <ProductDetail /> },
      { path: "about", element: <About /> },
      { path: "login", element: <Login /> },
      { path: "signup", element: <Signup /> },
      { path: "chapels", element: <Chapel /> },
      { path: "insurance", element: <Insurance /> },
      { path: "admin/login", element: <AdminLogin /> },
      { path: "cart", element: <Cart /> },
      { path: "checkout", element: <Checkout /> }, // âœ… added properly

      // Protected routes
      {
        element: <ProtectedRoute />,
        children: [
          { path: "profile/*", element: <Profile /> },
          { path: "admin", element: <Admin /> },
          // If you want checkout to require login later, move it here:
          // { path: "checkout", element: <Checkout /> },
        ],
      },
    ],
  },
]);

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <AuthProvider>
      <UserProvider>
        <CartProvider>
          <RouterProvider router={router} />
        </CartProvider>
      </UserProvider>
    </AuthProvider>
  </React.StrictMode>
);
